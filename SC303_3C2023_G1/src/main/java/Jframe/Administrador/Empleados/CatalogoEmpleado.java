/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Jframe.Administrador.Empleados;

import Catalogos.Personal.Empleado;
import Jframe.Administrador.Catalogos;
import java.io.*; 
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manri
 */
public class CatalogoEmpleado extends javax.swing.JFrame {
    ArrayList<Empleado> listaEmpleados = new ArrayList<>();
    /** 
     * Creates new form Empleadoss
     */
    public CatalogoEmpleado() {
        initComponents();
        cargarDesdeArchivo();
        actualizarTabla();
    }

    
    public void setListaEmpleados(ArrayList<Empleado> listaEmpleados) {
        this.listaEmpleados = listaEmpleados;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        telefonoEmpleado = new javax.swing.JTextField();
        labelTelefono = new javax.swing.JLabel();
        emailEmpleado = new javax.swing.JTextField();
        labelEmaill = new javax.swing.JLabel();
        registrarEmpleado = new javax.swing.JButton();
        nombre = new javax.swing.JTextField();
        labelNombre = new javax.swing.JLabel();
        apellidosEmpleado = new javax.swing.JTextField();
        labelApellidos = new javax.swing.JLabel();
        cuidadEmpleado = new javax.swing.JTextField();
        labelCuidad = new javax.swing.JLabel();
        direccionEmpleado = new javax.swing.JTextField();
        labelDireccion = new javax.swing.JLabel();
        volverACatalogo = new javax.swing.JButton();
        labelTelefono1 = new javax.swing.JLabel();
        editarEmpleado = new javax.swing.JButton();
        labelTelefono3 = new javax.swing.JLabel();
        labelTelefono4 = new javax.swing.JLabel();
        limpiarEspacios = new javax.swing.JButton();
        labelTelefono5 = new javax.swing.JLabel();
        labelTelefono6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 149, 290, 300));

        telefonoEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefonoEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(telefonoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 380, 223, -1));

        labelTelefono.setText("Teléfono");
        getContentPane().add(labelTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 363, -1, -1));

        emailEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(emailEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, 223, -1));

        labelEmaill.setText("Correo Electronico");
        getContentPane().add(labelEmaill, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 363, -1, -1));

        registrarEmpleado.setText("Registrar Empleado");
        registrarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(registrarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 465, -1, -1));

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 190, 223, -1));

        labelNombre.setText("Nombre");
        getContentPane().add(labelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 167, -1, -1));

        apellidosEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidosEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(apellidosEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 223, -1));

        labelApellidos.setText("Apellidos");
        getContentPane().add(labelApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 167, -1, -1));

        cuidadEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuidadEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(cuidadEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 301, 223, -1));

        labelCuidad.setText("Cuidad");
        getContentPane().add(labelCuidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 266, -1, -1));

        direccionEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(direccionEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 301, 223, -1));

        labelDireccion.setText("Dirección");
        getContentPane().add(labelDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 266, -1, -1));

        volverACatalogo.setText("Volver a Catalogo");
        volverACatalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverACatalogoActionPerformed(evt);
            }
        });
        getContentPane().add(volverACatalogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(887, 577, -1, -1));

        labelTelefono1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelTelefono1.setText("Editar e Inactivar Empleado");
        getContentPane().add(labelTelefono1, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 526, -1, -1));

        editarEmpleado.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        editarEmpleado.setText("Editar");
        editarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(editarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 527, -1, -1));

        labelTelefono3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelTelefono3.setText("Agregar Nuevo Empleado");
        getContentPane().add(labelTelefono3, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 113, -1, -1));

        labelTelefono4.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        labelTelefono4.setText("Catalogo Empleado");
        getContentPane().add(labelTelefono4, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 24, -1, -1));

        limpiarEspacios.setText("Limpiar");
        limpiarEspacios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarEspaciosActionPerformed(evt);
            }
        });
        getContentPane().add(limpiarEspacios, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 465, 118, -1));

        labelTelefono5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelTelefono5.setText("->");
        getContentPane().add(labelTelefono5, new org.netbeans.lib.awtextra.AbsoluteConstraints(416, 526, -1, -1));

        labelTelefono6.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelTelefono6.setText("Lista Empleado");
        getContentPane().add(labelTelefono6, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 92, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void actualizarTabla() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear the existing rows in the table

        for (Empleado empleado : listaEmpleados) {
            Object[] rowData = {
                empleado.getNombre(),
                empleado.isEstado() ? "Activo" : "Inactivo"
            };
            model.addRow(rowData);
        }
    }
    private void telefonoEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefonoEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefonoEmpleadoActionPerformed

    private void emailEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailEmpleadoActionPerformed
    public void agregarEmpleado(Empleado empleado){
        listaEmpleados.add(empleado);  
    }
    private void registrarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarEmpleadoActionPerformed
        try {
        cargarDesdeArchivo();

        String nombreEmpleado = nombre.getText();
        String apellidos = apellidosEmpleado.getText();
        String ciudad = cuidadEmpleado.getText();
        String direccion = direccionEmpleado.getText();
        String telefono = telefonoEmpleado.getText();
        String email = emailEmpleado.getText();
        boolean estado = true;

        if (nombreEmpleado.isEmpty() || apellidos.isEmpty() || ciudad.isEmpty() || direccion.isEmpty()
                || telefono.isEmpty() || email.isEmpty()) {
            throw new Exception("Algunos de los campos requeridos no fueron completados");
        } else {
            Empleado existente = encontrarEmpleado(nombreEmpleado,email);
            if (existente != null) {
                JOptionPane.showMessageDialog(null, "El empleado ya existe!");
            } else {
                // El empleado no existe, agrégalo
                Empleado empleado = new Empleado();
                empleado.setNombre(nombreEmpleado);
                empleado.setApellidos(apellidos);
                empleado.setCuidad(ciudad);
                empleado.setDirrecion(direccion);
                empleado.setTelefono(telefono);
                empleado.setEmail(email);
                empleado.setEstado(true);

                listaEmpleados.add(empleado);
                guardarEnArchivo();
                JOptionPane.showMessageDialog(null, "Empleado Correctamente Agregado");
                limpiar();
                actualizarTabla();
                
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al agregar los datos: " + e.getMessage(), "Error!",
                JOptionPane.INFORMATION_MESSAGE);
    }
        
    
    }//GEN-LAST:event_registrarEmpleadoActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void apellidosEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidosEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidosEmpleadoActionPerformed

    private void cuidadEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuidadEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuidadEmpleadoActionPerformed

    private void direccionEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionEmpleadoActionPerformed

    private void volverACatalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverACatalogoActionPerformed
        Catalogos catalogos = new Catalogos();
        catalogos.setVisible(true);
        catalogos.pack();
        catalogos.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_volverACatalogoActionPerformed

    private void editarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarEmpleadoActionPerformed
        cargarDesdeArchivo();
        String nombreEmpleado = JOptionPane.showInputDialog("Nombre Empleado");
        String emailEmpleado = JOptionPane.showInputDialog("Correo Electronico Empleado:");

    Empleado empleado = encontrarEmpleado(nombreEmpleado, emailEmpleado);

    if (empleado != null) {
        mostrarEmpleadoEspecifico(empleado);

        editarNombre(empleado);
        editarApellidos(empleado);
        editarCiudad(empleado);
        editarDireccion(empleado);
        editarTelefono(empleado);
        editarEmail(empleado);
        editarEstado(empleado);

        
        guardarEnArchivo();
        actualizarTabla();
    } else {
        JOptionPane.showMessageDialog(null, "Empleado no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

    private void editarNombre(Empleado empleado) {
        String nuevoNombre = JOptionPane.showInputDialog("Ingrese el nuevo nombre del empleado (o presione OK si no quiere cambiarlo)");
        if (!nuevoNombre.isEmpty()) {
            empleado.setNombre(nuevoNombre);
        }
    }

    private void editarApellidos(Empleado empleado) {
        String nuevosApellidos = JOptionPane.showInputDialog("Ingrese los nuevos apellidos del empleado (o presione OK si no quiere cambiarlos)");
        if (!nuevosApellidos.isEmpty()) {
            empleado.setApellidos(nuevosApellidos);
        }
    }

    private void editarCiudad(Empleado empleado) {
        String nuevaCiudad = JOptionPane.showInputDialog("Ingrese la nueva cuidad del empleado (o presione OK si no quiere cambiarla)");
        if (!nuevaCiudad.isEmpty()) {
            empleado.setCuidad(nuevaCiudad);
        }
    }

    private void editarDireccion(Empleado empleado) {
        String nuevaDireccion = JOptionPane.showInputDialog("Ingrese la nueva direccion del empleado (o presione OK si no quiere cambiarla)");
        if (!nuevaDireccion.isEmpty()) {
            empleado.setDirrecion(nuevaDireccion);
        }
    }

    private void editarTelefono(Empleado empleado) {
        String nuevoTelefono = JOptionPane.showInputDialog("Ingrese el nuevo telefono del empleado (o presione OK si no quiere cambiarlo)");
        if (!nuevoTelefono.isEmpty()) {
            empleado.setTelefono(nuevoTelefono);
        }
    }

    private void editarEmail(Empleado empleado) {
        String nuevoEmail = JOptionPane.showInputDialog("Ingrese el nuevo correo electronico del empleado (o presione OK si no quiere cambiarlo)");
        if (!nuevoEmail.isEmpty()) {
            empleado.setEmail(nuevoEmail);
        }
    }

    private void editarEstado(Empleado empleado) {
        int opcion = JOptionPane.showConfirmDialog(null, "Quiere cambiar el estado del empleado?", "Edit Employee Status", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            empleado.setEstado(!empleado.isEstado());
        }

    }//GEN-LAST:event_editarEmpleadoActionPerformed

    private void limpiarEspaciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarEspaciosActionPerformed
        nombre.setText(null);
        apellidosEmpleado.setText(null);
        cuidadEmpleado.setText(null);
        direccionEmpleado.setText(null);
        telefonoEmpleado.setText(null);
        emailEmpleado.setText(null);
    }//GEN-LAST:event_limpiarEspaciosActionPerformed

    private void cargarDesdeArchivo() {
    listaEmpleados.clear();
    try (BufferedReader archivo = new BufferedReader(new FileReader("src/main/java/BaseDeDatos/Empleados.txt"))) {
        String line;
        while ((line = archivo.readLine()) != null) {
            Empleado empleado = partesEmpleado(line);
            if (empleado != null) {
                listaEmpleados.add(empleado);
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(null, "Error al cargar el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private Empleado partesEmpleado(String line) {
    String[] partes = line.split(",");
    if (partes.length >= 7) {
        Empleado empleado = new Empleado();
        empleado.setNombre(partes[0]);
        empleado.setApellidos(partes[1]);
        empleado.setCuidad(partes[2]);
        empleado.setDirrecion(partes[3]);
        empleado.setTelefono(partes[4]);
        empleado.setEmail(partes[5]);
        empleado.setEstado(Boolean.parseBoolean(partes[6]));
        return empleado;
    } else {
        return null;
    }
}

    private void guardarEnArchivo() {
    try (BufferedWriter archivo = new BufferedWriter(new FileWriter("src/main/java/BaseDeDatos/Empleados.txt"))) {
        for (Empleado emp : listaEmpleados) {
            archivo.write(formatoEmpleado(emp));
            archivo.newLine();
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar en el archivo: " + e.getMessage(), "Error",
                JOptionPane.ERROR_MESSAGE);
    }
}
    private void limpiar(){
        nombre.setText(null);
        apellidosEmpleado.setText(null);
        cuidadEmpleado.setText(null);
        direccionEmpleado.setText(null);
        telefonoEmpleado.setText(null);
        emailEmpleado.setText(null);
    }
    private void mostrarEmpleadoEspecifico(Empleado empleado) {
    JOptionPane.showMessageDialog(
            null,
            "Nombre: " + empleado.getNombre() + "\n" +
            "Apellidos: " + empleado.getApellidos() + "\n" +
            "Cuidad: " + empleado.getCuidad() + "\n" +
            "Dirección: " + empleado.getDirrecion() + "\n" +
            "Teléfono: " + empleado.getTelefono() + "\n" +
            "Correo Electrónico: " + empleado.getEmail() + "\n" +
            "Estado: " + (empleado.isEstado() ? "Activo" : "Inactivo"),
            "Detalles del Empleado",
            JOptionPane.INFORMATION_MESSAGE
    );
    
}
    private Empleado encontrarEmpleado(String nombre, String email) {
       for (Empleado empleado : listaEmpleados) {
           if (empleado.getNombre().equals(nombre) && empleado.getEmail().equals(email)) {
               return empleado;
           }
       }
       return null;
   }
    
    private String formatoEmpleado(Empleado emp) {
        return emp.getNombre()+","+ emp.getApellidos()+","+ emp.getCuidad()+","+ emp.getDirrecion()+","+emp.getTelefono()+","+emp.getEmail()+","+ emp.isEstado();

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CatalogoEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CatalogoEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CatalogoEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CatalogoEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CatalogoEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidosEmpleado;
    private javax.swing.JTextField cuidadEmpleado;
    private javax.swing.JTextField direccionEmpleado;
    private javax.swing.JButton editarEmpleado;
    private javax.swing.JTextField emailEmpleado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelApellidos;
    private javax.swing.JLabel labelCuidad;
    private javax.swing.JLabel labelDireccion;
    private javax.swing.JLabel labelEmaill;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelTelefono;
    private javax.swing.JLabel labelTelefono1;
    private javax.swing.JLabel labelTelefono3;
    private javax.swing.JLabel labelTelefono4;
    private javax.swing.JLabel labelTelefono5;
    private javax.swing.JLabel labelTelefono6;
    private javax.swing.JButton limpiarEspacios;
    private javax.swing.JTextField nombre;
    private javax.swing.JButton registrarEmpleado;
    private javax.swing.JTextField telefonoEmpleado;
    private javax.swing.JButton volverACatalogo;
    // End of variables declaration//GEN-END:variables
}
